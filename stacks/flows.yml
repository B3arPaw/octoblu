version: '3.4'

networks:
  common:
    attachable: true
    driver: 'overlay'
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

services:
  interval-service:
    image: "octoblu/interval-service:latest"
    env_file: "./env.d/interval-service.env"
    networks:
      common:
    depends_on:
      - meshblu-core-protocol-adapter-http
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 5
        window: 120s
      update_config:
        delay: 30s
        failure_action: continue
        monitor: 1m
      labels:
        - traefik.frontend.rule=HostRegexp:interval-service,interval-service.{domain:[a-zA-Z0-9.]+}
        - traefik.port=80
  trigger-service:
    image: "octoblu/triggers-service:latest"
    env_file: "./env.d/trigger-service.env"
    networks:
      common:
        aliases:
          - triggers
          - trigger-service
    depends_on:
      - meshblu-core-protocol-adapter-http
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 5
        window: 120s
      update_config:
        delay: 30s
        failure_action: continue
        monitor: 1m
      labels:
        - traefik.frontend.rule=HostRegexp:triggers,triggers.{domain:[a-zA-Z0-9.]+}
        - traefik.port=80
  nanocyte-engine-http:
    image: "octoblu/nanocyte-engine-http:latest"
    env_file: "./env.d/nanocyte-engine-http.env"
    networks:
      common:
        aliases:
          - nanocyte-engine
          - nanocyte-engine-http
    depends_on:
      - meshblu-core-protocol-adapter-http
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 5
        window: 120s
      update_config:
        delay: 30s
        failure_action: continue
        monitor: 1m
      labels:
        - traefik.frontend.rule=HostRegexp:nanocyte-engine,nanocyte-engine.{domain:[a-zA-Z0-9.]+}
        - traefik.port=80
  minutemen-worker:
    image: "octoblu/minutemen-worker"
    env_file: "./env.d/minutemen-worker.env"
    networks:
      common:
    depends_on:
      - meshblu-core-protocol-adapter-http
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 5
        window: 120s
      update_config:
        delay: 30s
        failure_action: continue
        monitor: 1m
  secondmen-worker:
    image: "octoblu/secondmen-worker"
    env_file: "./env.d/secondmen-worker.env"
    networks:
      common:
    depends_on:
      - meshblu-core-protocol-adapter-http
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 5
        window: 120s
      update_config:
        delay: 30s
        failure_action: continue
        monitor: 1m
  nowmen-worker:
    image: "octoblu/nowmen-worker"
    env_file: "./env.d/nowmen-worker.env"
    networks:
      common:
    depends_on:
      - meshblu-core-protocol-adapter-http
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 5
        window: 120s
      update_config:
        delay: 30s
        failure_action: continue
        monitor: 1m
  nanocyte-engine-worker:
    image: "octoblu/nanocyte-engine-worker"
    env_file: "./env.d/nanocyte-engine-worker.env"
    networks:
      common:
    depends_on:
      - meshblu-core-protocol-adapter-http
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 5
        window: 120s
      update_config:
        delay: 30s
        failure_action: continue
        monitor: 1m
  registry-nanocyte-node:
    image: "octoblu/registry-nanocyte-node:latest"
    env_file: "./env.d/registry-nanocyte-node.env"
    networks:
      common:
        aliases:
          - nanocyte-registry
          - registry-nanocyte-node
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 5
        window: 120s
      update_config:
        delay: 30s
        failure_action: continue
        monitor: 1m
      labels:
        - traefik.frontend.rule=HostRegexp:nanocyte-registry,nanocyte-registry.{domain:[a-zA-Z0-9.]+}
        - traefik.port=80
  nanocyte-flow-deploy-service:
    image: "octoblu/nanocyte-flow-deploy-service:latest"
    env_file: "./env.d/nanocyte-flow-deploy-service.env"
    networks:
      common:
        aliases:
          - nanocyte-flow-deploy
          - nanocyte-flow-deploy-service
    depends_on:
      - meshblu-core-protocol-adapter-http
      - nanocyte-interval-service
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 5
        window: 120s
      update_config:
        delay: 30s
        failure_action: continue
        monitor: 1m
      labels:
        - traefik.frontend.rule=HostRegexp:nanocyte-flow-deploy,nanocyte-flow-deploy.{domain:[a-zA-Z0-9.]+}
        - traefik.port=80

volumes:
  dependencies:
    labels:
      - './traefik.yml'
      - './meshblu-http.yml'
